몽고 DB 의 특징 중 하나는 자바 스크립트 문법을 사용 한다는 것이다.
노드가 자바스크립트를 사용하므로 데이터베이스마저 몽고디비를 사용한다면 자바스크립트만 사용하여 
웹 어플리케이션을 만들 수 있는 것입니다.

하나의 언어만 사용하면 되므로 생산성도 매우 높다,. 
하지만 몽고디비는 흔히 사용하는 RDBMS가 아니라 특색이 뚜렷한 NoSQL이므로 특징을 잘 알고 사용해야 한다. 


차이점 분석:
SQL(MySQL)
-> 규칙에 맞는 데이터 입력, 테이블 간 JOIN 지원, 안정성, 일관성, 용어(테이블, 로우, 컬럼)

NoSQL(몽고디비)
-> 자유로운 데이터 입력, 컬렉션 간 JOIN 미지원, 확장성, 가용성, 용어(컬렉션, 다큐먼트, 필드)


Mongodb 파일 경로 
-> 윈도우(현재) -> c:\Program Files\MongoDB\Server\5.0\bin

데이터 베이스 및 컬렉션 생성하기 
데이터 베이스 생성: use nodejs
데이터베이스 목록 확인: show dbs 
현재 사용중인 데이터 베이스 확인 명령어: db

데이터베이스 use -> db 안에 컬랙션 생성 -> 컬랙션 생성 확인들, db.컬랙션.find({}); 와 같은 명령어 
find({})는 컬렉션의 모든 다큐먼트를 조회하라는 뜻이다. 

db.컬렉션명.save(다큐먼트)로 다큐먼트를 생성할 수 있따. 

//특정 필드만 조회 
db.users.find({}, { _id: 0, name: 1, married: 1});
id는 기본적으로 가지고 오게 되어서, 0 또는 false 를 입력해 가져오지 않도록 하고, 1또는 true로 표시한 필드만 가지고 온다. 

// 조회 시 조건을 주려면 첫 번째 인수 객체에 기입하면 된다. 
age가 30초과, married 가 true인 다큐먼트 이름으로 나이를 조회 
db.users.find({age: {&gt:30 }, married: true},{_id:0, name: 1, age: 1});

// 자주 쓰이는 연산자로는 $gt(초과), $gte(이상), $lt(미만), $lte(이하), $ne(같지 않음), $or(또는), $int(배열 요소 중 하나)
몽고 디비 에서 OR 연산은 $or 을 사용한다. 
age가 30초과이거나 married 가 false 인 다큐먼트 조회 -> 이런식으로 , sort도 가능하고, llimit 메서드, skip메서드 등 구글링해서 사용하자! 
 db.users.find({ $or: [{age : { $gt : 30 }}, { marrted: false}]}, { _id: 0, name: 1, age: 1});

// 몽고 DB update
db.users.update({name : 'nero'}, {$set: {comment: '안녕하세요. 이 필드를 바꿔보겠습니다!}});


// 몽고 DB 
db.users.remove({ name: 'nero' })






